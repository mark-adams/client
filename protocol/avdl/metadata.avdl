@namespace("keybase.1")

protocol metadata {
  import idl "backend_common.avdl";

  record KeyHalf {
         UID user;
         KID deviceKID;
         bytes key;
  }

  record MDBlock {
         int version;
         bytes block;
  }

  record MetadataResponse {
         string folderID;
         array<MDBlock> mdBlocks;
  }

  int authenticate(string signature);
  void putMetadata(MDBlock mdBlock, map<string> logTags);
  MetadataResponse getMetadata(string folderID, bytes folderHandle, string branchID, boolean unmerged, long startRevision, long stopRevision, map<string> logTags);
  void registerForUpdates(string folderID, long currRevision, map<string> logTags);
  void pruneBranch(string folderID, string branchID, map<string> logTags);
  void putKeys(array<KeyHalf> keyHalves, map<string> logTags);
  bytes getKey(bytes keyHalfID, string deviceKID, map<string> logTags);
  boolean truncateLock(string folderID);
  boolean truncateUnlock(string folderID);
  bytes getFolderHandle(string folderID, string signature);
  void getFoldersForRekey(KID deviceKID);
  void ping();
}
